{"ast":null,"code":"var _jsxFileName = \"F:\\\\FAMILY DOCS\\\\UTSAV ROHILLA\\\\recipes-app-react-native\\\\src\\\\screens\\\\IngredientsDetails\\\\IngredientsDetailsScreen.js\";\nimport React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\nexport default function IngredientsDetailsScreen(props) {\n  var _route$params,\n      _this = this;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = (_route$params = route.params) == null ? void 0 : _route$params.ingredients;\n  var ingredientsArray = getAllIngredients(item);\n  useLayoutEffect(function () {\n    var _route$params2;\n\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerTitleStyle: {\n        fontSize: 16\n      }\n    });\n  }, []);\n\n  var onPressIngredient = function onPressIngredient(item) {\n    var name = getIngredientName(item.ingredientId);\n    var ingredient = item.ingredientId;\n    navigation.navigate(\"Ingredient\", {\n      ingredient: ingredient,\n      name: name\n    });\n  };\n\n  var renderIngredient = function renderIngredient(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressIngredient(item[0]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item[0].photo_url\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, item[0].name), React.createElement(Text, {\n      style: {\n        color: \"grey\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, item[1])));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 3,\n    data: ingredientsArray,\n    renderItem: renderIngredient,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.recipeId;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["F:/FAMILY DOCS/UTSAV ROHILLA/recipes-app-react-native/src/screens/IngredientsDetails/IngredientsDetailsScreen.js"],"names":["React","useLayoutEffect","styles","getIngredientName","getAllIngredients","IngredientsDetailsScreen","props","navigation","route","item","params","ingredients","ingredientsArray","setOptions","title","headerTitleStyle","fontSize","onPressIngredient","name","ingredientId","ingredient","navigate","renderIngredient","container","photo","uri","photo_url","color","recipeId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,iBAAT,EAA4BC,iBAA5B;AAEA,eAAe,SAASC,wBAAT,CAAkCC,KAAlC,EAAyC;AAAA;AAAA;;AAAA,MAC9CC,UAD8C,GACxBD,KADwB,CAC9CC,UAD8C;AAAA,MAClCC,KADkC,GACxBF,KADwB,CAClCE,KADkC;AAGtD,MAAMC,IAAI,oBAAGD,KAAK,CAACE,MAAT,qBAAG,cAAcC,WAA3B;AACA,MAAMC,gBAAgB,GAAGR,iBAAiB,CAACK,IAAD,CAA1C;AAEAR,EAAAA,eAAe,CAAC,YAAM;AAAA;;AACpBM,IAAAA,UAAU,CAACM,UAAX,CAAsB;AACpBC,MAAAA,KAAK,oBAAEN,KAAK,CAACE,MAAR,qBAAE,eAAcI,KADD;AAEpBC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,QAAQ,EAAE;AADM;AAFE,KAAtB;AAMD,GAPc,EAOZ,EAPY,CAAf;;AASA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,IAAD,EAAU;AAClC,QAAIS,IAAI,GAAGf,iBAAiB,CAACM,IAAI,CAACU,YAAN,CAA5B;AACA,QAAIC,UAAU,GAAGX,IAAI,CAACU,YAAtB;AACAZ,IAAAA,UAAU,CAACc,QAAX,CAAoB,YAApB,EAAkC;AAAED,MAAAA,UAAU,EAAVA,UAAF;AAAcF,MAAAA,IAAI,EAAJA;AAAd,KAAlC;AACD,GAJD;;AAMA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,QAAGb,IAAH,QAAGA,IAAH;AAAA,WACvB,oBAAC,kBAAD;AAAoB,MAAA,aAAa,EAAC,qBAAlC;AAAwD,MAAA,OAAO,EAAE;AAAA,eAAMQ,iBAAiB,CAACR,IAAI,CAAC,CAAD,CAAL,CAAvB;AAAA,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACqB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAErB,MAAM,CAACsB,KAArB;AAA4B,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEhB,IAAI,CAAC,CAAD,CAAJ,CAAQiB;AAAf,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAExB,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BL,IAAI,CAAC,CAAD,CAAJ,CAAQS,IAApC,CAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiClB,IAAI,CAAC,CAAD,CAArC,CAHF,CADF,CADuB;AAAA,GAAzB;;AAUA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,MAAlB;AAAmB,IAAA,4BAA4B,EAAE,KAAjD;AAAwD,IAAA,UAAU,EAAE,CAApE;AAAuE,IAAA,IAAI,EAAEG,gBAA7E;AAA+F,IAAA,UAAU,EAAEU,gBAA3G;AAA6H,IAAA,YAAY,EAAE,sBAACb,IAAD;AAAA,kBAAaA,IAAI,CAACmB,QAAlB;AAAA,KAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { FlatList, Text, View, Image, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\n\nexport default function IngredientsDetailsScreen(props) {\n  const { navigation, route } = props;\n\n  const item = route.params?.ingredients;\n  const ingredientsArray = getAllIngredients(item);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: route.params?.title,\n      headerTitleStyle: {\n        fontSize: 16,\n      },\n    });\n  }, []);\n\n  const onPressIngredient = (item) => {\n    let name = getIngredientName(item.ingredientId);\n    let ingredient = item.ingredientId;\n    navigation.navigate(\"Ingredient\", { ingredient, name });\n  };\n\n  const renderIngredient = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressIngredient(item[0])}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item[0].photo_url }} />\n        <Text style={styles.title}>{item[0].name}</Text>\n        <Text style={{ color: \"grey\" }}>{item[1]}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={3} data={ingredientsArray} renderItem={renderIngredient} keyExtractor={(item) => `${item.recipeId}`} />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}