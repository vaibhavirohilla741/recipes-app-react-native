{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\FAMILY DOCS\\\\UTSAV ROHILLA\\\\recipes-app-react-native\\\\src\\\\screens\\\\Recipe\\\\RecipeScreen.js\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    viewportWidth = _Dimensions$get.width;\n\nexport default function RecipeScreen(props) {\n  var _route$params,\n      _this = this;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = (_route$params = route.params) == null ? void 0 : _route$params.item;\n  var category = getCategoryById(item.categoryId);\n  var title = getCategoryName(category.id);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSlide = _useState2[0],\n      setActiveSlide = _useState2[1];\n\n  var slider1Ref = useRef();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTransparent: \"true\",\n      headerLeft: function headerLeft() {\n        return React.createElement(BackButton, {\n          onPress: function onPress() {\n            navigation.goBack();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  }, []);\n\n  var renderImage = function renderImage(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: {\n        uri: item\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  var onPressIngredient = function onPressIngredient(item) {\n    var name = getIngredientName(item);\n    var ingredient = item;\n    navigation.navigate(\"Ingredient\", {\n      ingredient: ingredient,\n      name: name\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.carouselContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.carousel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Carousel, {\n    ref: slider1Ref,\n    data: item.photosArray,\n    renderItem: renderImage,\n    sliderWidth: viewportWidth,\n    itemWidth: viewportWidth,\n    inactiveSlideScale: 1,\n    inactiveSlideOpacity: 1,\n    firstItem: 0,\n    loop: false,\n    autoplay: false,\n    autoplayDelay: 500,\n    autoplayInterval: 3000,\n    onSnapToItem: function onSnapToItem(index) {\n      return setActiveSlide(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(Pagination, {\n    dotsLength: item.photosArray.length,\n    activeDotIndex: activeSlide,\n    containerStyle: styles.paginationContainer,\n    dotColor: \"rgba(255, 255, 255, 0.92)\",\n    dotStyle: styles.paginationDot,\n    inactiveDotColor: \"white\",\n    inactiveDotOpacity: 0.4,\n    inactiveDotScale: 0.6,\n    carouselRef: slider1Ref.current,\n    tappableDots: !!slider1Ref.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.infoRecipeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.infoRecipeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, item.title), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return navigation.navigate(\"RecipesList\", {\n        category: category,\n        title: title\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, getCategoryName(item.categoryId).toUpperCase()))), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.infoPhoto,\n    source: require(\"../../../assets/icons/time.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.infoRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, item.time, \" minutes \")), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(ViewIngredientsButton, {\n    onPress: function onPress() {\n      var ingredients = item.ingredients;\n      var title = \"Ingredients for \" + item.title;\n      navigation.navigate(\"IngredientsDetails\", {\n        ingredients: ingredients,\n        title: title\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.infoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.infoDescriptionRecipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, item.description))));\n}","map":{"version":3,"sources":["F:/FAMILY DOCS/UTSAV ROHILLA/recipes-app-react-native/src/screens/Recipe/RecipeScreen.js"],"names":["React","useLayoutEffect","useRef","useState","styles","Carousel","Pagination","getIngredientName","getCategoryName","getCategoryById","BackButton","ViewIngredientsButton","Dimensions","get","viewportWidth","width","RecipeScreen","props","navigation","route","item","params","category","categoryId","title","id","activeSlide","setActiveSlide","slider1Ref","setOptions","headerTransparent","headerLeft","goBack","headerRight","renderImage","imageContainer","image","uri","onPressIngredient","name","ingredient","navigate","container","carouselContainer","carousel","photosArray","index","length","paginationContainer","paginationDot","current","infoRecipeContainer","infoRecipeName","infoContainer","toUpperCase","infoPhoto","require","infoRecipe","time","ingredients","infoDescriptionRecipe","description"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { ScrollView, Text, View, Image, Dimensions, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\n\nconst { width: viewportWidth } = Dimensions.get(\"window\");\n\nexport default function RecipeScreen(props) {\n  const { navigation, route } = props;\n\n  const item = route.params?.item;\n  const category = getCategoryById(item.categoryId);\n  const title = getCategoryName(category.id);\n\n  const [activeSlide, setActiveSlide] = useState(0);\n\n  const slider1Ref = useRef();\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTransparent: \"true\",\n      headerLeft: () => (\n        <BackButton\n          onPress={() => {\n            navigation.goBack();\n          }}\n        />\n      ),\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  const renderImage = ({ item }) => (\n    <TouchableHighlight>\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} source={{ uri: item }} />\n      </View>\n    </TouchableHighlight>\n  );\n\n  const onPressIngredient = (item) => {\n    var name = getIngredientName(item);\n    let ingredient = item;\n    navigation.navigate(\"Ingredient\", { ingredient, name });\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.carouselContainer}>\n        <View style={styles.carousel}>\n          <Carousel\n            ref={slider1Ref}\n            data={item.photosArray}\n            renderItem={renderImage}\n            sliderWidth={viewportWidth}\n            itemWidth={viewportWidth}\n            inactiveSlideScale={1}\n            inactiveSlideOpacity={1}\n            firstItem={0}\n            loop={false}\n            autoplay={false}\n            autoplayDelay={500}\n            autoplayInterval={3000}\n            onSnapToItem={(index) => setActiveSlide(0)}\n          />\n          <Pagination\n            dotsLength={item.photosArray.length}\n            activeDotIndex={activeSlide}\n            containerStyle={styles.paginationContainer}\n            dotColor=\"rgba(255, 255, 255, 0.92)\"\n            dotStyle={styles.paginationDot}\n            inactiveDotColor=\"white\"\n            inactiveDotOpacity={0.4}\n            inactiveDotScale={0.6}\n            carouselRef={slider1Ref.current}\n            tappableDots={!!slider1Ref.current}\n          />\n        </View>\n      </View>\n      <View style={styles.infoRecipeContainer}>\n        <Text style={styles.infoRecipeName}>{item.title}</Text>\n        <View style={styles.infoContainer}>\n          <TouchableHighlight onPress={() => navigation.navigate(\"RecipesList\", { category, title })}>\n            <Text style={styles.category}>{getCategoryName(item.categoryId).toUpperCase()}</Text>\n          </TouchableHighlight>\n        </View>\n\n        <View style={styles.infoContainer}>\n          <Image style={styles.infoPhoto} source={require(\"../../../assets/icons/time.png\")} />\n          <Text style={styles.infoRecipe}>{item.time} minutes </Text>\n        </View>\n\n        <View style={styles.infoContainer}>\n          <ViewIngredientsButton\n            onPress={() => {\n              let ingredients = item.ingredients;\n              let title = \"Ingredients for \" + item.title;\n              navigation.navigate(\"IngredientsDetails\", { ingredients, title });\n            }}\n          />\n        </View>\n        <View style={styles.infoContainer}>\n          <Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}